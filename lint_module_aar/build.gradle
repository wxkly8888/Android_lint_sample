apply plugin: 'com.android.library'
//this project exists only for generating the aar file which includes the lint.jar.
// if other projects/modules when to using the custom lint check, only to
android {
    compileSdkVersion 28
    buildToolsVersion "28.0.0"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

//    Note: When using Android Gradle plugin 3.4.0 and higher,
//    this dependency configuration no longer packages the lint checks in your Android Library projects.
//            To include lint check dependencies in your AAR libraries, use the lintPublish configuration described below.

//    Use this configuration in Android library projects to include lint checks you want Gradle to compile into a lint.jar file and package in your AAR.
//            This causes projects that consume your AAR to also apply those lint checks. If you were previously using the lintChecks dependency configuration to include lint checks in the published AAR,
//            you need to migrate those dependencies to instead use the lintPublish configuration.
//please refer to this:https://developer.android.google.cn/studio/build/dependencies#dependency_configurations
    lintPublish project(":lint_library")
}


//we do not need this now

//task copyLintJar(type: Copy) {
//    from(configurations.lintPublish) {
//        rename {
//            String fileName ->
//                'lint.jar'
//        }
//    }
//    into 'build/intermediates/lint/'
//}
//
//project.afterEvaluate {
////    def compileLintTask = project.tasks.find { it.name == 'compileLint' }
////    compileLintTask.dependsOn(copyLintJar)
//    def preBuildTask = project.tasks.find { it.name == 'preDebugBuild' }
//    preBuildTask.dependsOn(copyLintJar)
//}